/**
 * generated by Xtext 2.23.0
 */
package org.xtext.myCsv.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.myCsv.Field;
import org.xtext.myCsv.InsertField;
import org.xtext.myCsv.MyCsvPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Insert Field</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.myCsv.impl.InsertFieldImpl#getFieldname <em>Fieldname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InsertFieldImpl extends InsertImpl implements InsertField
{
  /**
   * The cached value of the '{@link #getFieldname() <em>Fieldname</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldname()
   * @generated
   * @ordered
   */
  protected Field fieldname;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InsertFieldImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyCsvPackage.Literals.INSERT_FIELD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Field getFieldname()
  {
    return fieldname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFieldname(Field newFieldname, NotificationChain msgs)
  {
    Field oldFieldname = fieldname;
    fieldname = newFieldname;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyCsvPackage.INSERT_FIELD__FIELDNAME, oldFieldname, newFieldname);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFieldname(Field newFieldname)
  {
    if (newFieldname != fieldname)
    {
      NotificationChain msgs = null;
      if (fieldname != null)
        msgs = ((InternalEObject)fieldname).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyCsvPackage.INSERT_FIELD__FIELDNAME, null, msgs);
      if (newFieldname != null)
        msgs = ((InternalEObject)newFieldname).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyCsvPackage.INSERT_FIELD__FIELDNAME, null, msgs);
      msgs = basicSetFieldname(newFieldname, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyCsvPackage.INSERT_FIELD__FIELDNAME, newFieldname, newFieldname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyCsvPackage.INSERT_FIELD__FIELDNAME:
        return basicSetFieldname(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyCsvPackage.INSERT_FIELD__FIELDNAME:
        return getFieldname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyCsvPackage.INSERT_FIELD__FIELDNAME:
        setFieldname((Field)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyCsvPackage.INSERT_FIELD__FIELDNAME:
        setFieldname((Field)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyCsvPackage.INSERT_FIELD__FIELDNAME:
        return fieldname != null;
    }
    return super.eIsSet(featureID);
  }

} //InsertFieldImpl
