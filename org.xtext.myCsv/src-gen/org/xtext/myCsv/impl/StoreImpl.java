/**
 * generated by Xtext 2.23.0
 */
package org.xtext.myCsv.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.myCsv.MyCsvPackage;
import org.xtext.myCsv.Path;
import org.xtext.myCsv.Store;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Store</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.myCsv.impl.StoreImpl#getPath <em>Path</em>}</li>
 *   <li>{@link org.xtext.myCsv.impl.StoreImpl#isSepDefined <em>Sep Defined</em>}</li>
 *   <li>{@link org.xtext.myCsv.impl.StoreImpl#getSep <em>Sep</em>}</li>
 * </ul>
 *
 * @generated
 */
public class StoreImpl extends StatementImpl implements Store
{
  /**
   * The cached value of the '{@link #getPath() <em>Path</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPath()
   * @generated
   * @ordered
   */
  protected Path path;

  /**
   * The default value of the '{@link #isSepDefined() <em>Sep Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSepDefined()
   * @generated
   * @ordered
   */
  protected static final boolean SEP_DEFINED_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSepDefined() <em>Sep Defined</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSepDefined()
   * @generated
   * @ordered
   */
  protected boolean sepDefined = SEP_DEFINED_EDEFAULT;

  /**
   * The default value of the '{@link #getSep() <em>Sep</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSep()
   * @generated
   * @ordered
   */
  protected static final String SEP_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSep() <em>Sep</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSep()
   * @generated
   * @ordered
   */
  protected String sep = SEP_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected StoreImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyCsvPackage.Literals.STORE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Path getPath()
  {
    return path;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPath(Path newPath, NotificationChain msgs)
  {
    Path oldPath = path;
    path = newPath;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyCsvPackage.STORE__PATH, oldPath, newPath);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPath(Path newPath)
  {
    if (newPath != path)
    {
      NotificationChain msgs = null;
      if (path != null)
        msgs = ((InternalEObject)path).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyCsvPackage.STORE__PATH, null, msgs);
      if (newPath != null)
        msgs = ((InternalEObject)newPath).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyCsvPackage.STORE__PATH, null, msgs);
      msgs = basicSetPath(newPath, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyCsvPackage.STORE__PATH, newPath, newPath));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isSepDefined()
  {
    return sepDefined;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSepDefined(boolean newSepDefined)
  {
    boolean oldSepDefined = sepDefined;
    sepDefined = newSepDefined;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyCsvPackage.STORE__SEP_DEFINED, oldSepDefined, sepDefined));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSep()
  {
    return sep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSep(String newSep)
  {
    String oldSep = sep;
    sep = newSep;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyCsvPackage.STORE__SEP, oldSep, sep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyCsvPackage.STORE__PATH:
        return basicSetPath(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyCsvPackage.STORE__PATH:
        return getPath();
      case MyCsvPackage.STORE__SEP_DEFINED:
        return isSepDefined();
      case MyCsvPackage.STORE__SEP:
        return getSep();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyCsvPackage.STORE__PATH:
        setPath((Path)newValue);
        return;
      case MyCsvPackage.STORE__SEP_DEFINED:
        setSepDefined((Boolean)newValue);
        return;
      case MyCsvPackage.STORE__SEP:
        setSep((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyCsvPackage.STORE__PATH:
        setPath((Path)null);
        return;
      case MyCsvPackage.STORE__SEP_DEFINED:
        setSepDefined(SEP_DEFINED_EDEFAULT);
        return;
      case MyCsvPackage.STORE__SEP:
        setSep(SEP_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyCsvPackage.STORE__PATH:
        return path != null;
      case MyCsvPackage.STORE__SEP_DEFINED:
        return sepDefined != SEP_DEFINED_EDEFAULT;
      case MyCsvPackage.STORE__SEP:
        return SEP_EDEFAULT == null ? sep != null : !SEP_EDEFAULT.equals(sep);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (sepDefined: ");
    result.append(sepDefined);
    result.append(", sep: ");
    result.append(sep);
    result.append(')');
    return result.toString();
  }

} //StoreImpl
