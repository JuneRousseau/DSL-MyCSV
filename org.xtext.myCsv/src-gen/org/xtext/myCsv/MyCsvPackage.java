/**
 * generated by Xtext 2.23.0
 */
package org.xtext.myCsv;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.myCsv.MyCsvFactory
 * @model kind="package"
 * @generated
 */
public interface MyCsvPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "myCsv";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/MyCsv";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "myCsv";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  MyCsvPackage eINSTANCE = org.xtext.myCsv.impl.MyCsvPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ProgramImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getProgram()
   * @generated
   */
  int PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Stmts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__STMTS = 0;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LineIndexImpl <em>Line Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LineIndexImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndex()
   * @generated
   */
  int LINE_INDEX = 1;

  /**
   * The number of structural features of the '<em>Line Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_INDEX_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LineIndexCondImpl <em>Line Index Cond</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LineIndexCondImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndexCond()
   * @generated
   */
  int LINE_INDEX_COND = 2;

  /**
   * The feature id for the '<em><b>Cond</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_INDEX_COND__COND = LINE_INDEX_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Line Index Cond</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_INDEX_COND_FEATURE_COUNT = LINE_INDEX_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LineIndexNumImpl <em>Line Index Num</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LineIndexNumImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndexNum()
   * @generated
   */
  int LINE_INDEX_NUM = 3;

  /**
   * The feature id for the '<em><b>Lines</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_INDEX_NUM__LINES = LINE_INDEX_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Line Index Num</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LINE_INDEX_NUM_FEATURE_COUNT = LINE_INDEX_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.FieldIndexImpl <em>Field Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.FieldIndexImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndex()
   * @generated
   */
  int FIELD_INDEX = 4;

  /**
   * The number of structural features of the '<em>Field Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_INDEX_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.FieldIndexNameImpl <em>Field Index Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.FieldIndexNameImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndexName()
   * @generated
   */
  int FIELD_INDEX_NAME = 5;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_INDEX_NAME__FIELDS = FIELD_INDEX_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Field Index Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_INDEX_NAME_FEATURE_COUNT = FIELD_INDEX_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.FieldIndexNumImpl <em>Field Index Num</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.FieldIndexNumImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndexNum()
   * @generated
   */
  int FIELD_INDEX_NUM = 6;

  /**
   * The feature id for the '<em><b>Columns</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_INDEX_NUM__COLUMNS = FIELD_INDEX_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Field Index Num</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_INDEX_NUM_FEATURE_COUNT = FIELD_INDEX_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.CellIndexImpl <em>Cell Index</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.CellIndexImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getCellIndex()
   * @generated
   */
  int CELL_INDEX = 7;

  /**
   * The feature id for the '<em><b>Line</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CELL_INDEX__LINE = 0;

  /**
   * The feature id for the '<em><b>Colnum</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CELL_INDEX__COLNUM = 1;

  /**
   * The feature id for the '<em><b>Colname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CELL_INDEX__COLNAME = 2;

  /**
   * The number of structural features of the '<em>Cell Index</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CELL_INDEX_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ValueImpl <em>Value</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ValueImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getValue()
   * @generated
   */
  int VALUE = 8;

  /**
   * The number of structural features of the '<em>Value</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ValuesImpl <em>Values</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ValuesImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getValues()
   * @generated
   */
  int VALUES = 9;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUES__VALUES = 0;

  /**
   * The number of structural features of the '<em>Values</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PathImpl <em>Path</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PathImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPath()
   * @generated
   */
  int PATH = 10;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH__VALUE = 0;

  /**
   * The number of structural features of the '<em>Path</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PATH_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.FieldImpl <em>Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.FieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getField()
   * @generated
   */
  int FIELD = 11;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD__VALUE = 0;

  /**
   * The number of structural features of the '<em>Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.StatementImpl <em>Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.StatementImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getStatement()
   * @generated
   */
  int STATEMENT = 12;

  /**
   * The number of structural features of the '<em>Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LoadImpl <em>Load</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LoadImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLoad()
   * @generated
   */
  int LOAD = 13;

  /**
   * The feature id for the '<em><b>Path</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD__PATH = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Sep Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD__SEP_DEFINED = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Sep</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD__SEP = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>No Header</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD__NO_HEADER = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Load</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LOAD_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.StoreImpl <em>Store</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.StoreImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getStore()
   * @generated
   */
  int STORE = 14;

  /**
   * The feature id for the '<em><b>Path</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STORE__PATH = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Sep Defined</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STORE__SEP_DEFINED = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Sep</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STORE__SEP = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>No Header</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STORE__NO_HEADER = STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Store</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STORE_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExportJsonImpl <em>Export Json</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExportJsonImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExportJson()
   * @generated
   */
  int EXPORT_JSON = 15;

  /**
   * The feature id for the '<em><b>Path</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_JSON__PATH = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Export Json</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPORT_JSON_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ProjectionImpl <em>Projection</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ProjectionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getProjection()
   * @generated
   */
  int PROJECTION = 16;

  /**
   * The feature id for the '<em><b>Field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROJECTION__FIELD = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Projection</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROJECTION_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.SelectImpl <em>Select</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.SelectImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getSelect()
   * @generated
   */
  int SELECT = 17;

  /**
   * The feature id for the '<em><b>Line</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT__LINE = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Select</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SELECT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.DeleteImpl <em>Delete</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.DeleteImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDelete()
   * @generated
   */
  int DELETE = 18;

  /**
   * The number of structural features of the '<em>Delete</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.DeleteLineImpl <em>Delete Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.DeleteLineImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDeleteLine()
   * @generated
   */
  int DELETE_LINE = 19;

  /**
   * The feature id for the '<em><b>Lines</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_LINE__LINES = DELETE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Delete Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_LINE_FEATURE_COUNT = DELETE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.DeleteFieldImpl <em>Delete Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.DeleteFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDeleteField()
   * @generated
   */
  int DELETE_FIELD = 20;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_FIELD__FIELDS = DELETE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Delete Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DELETE_FIELD_FEATURE_COUNT = DELETE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.InsertImpl <em>Insert</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.InsertImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsert()
   * @generated
   */
  int INSERT = 21;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT__VALUES = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Insert</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.InsertLineImpl <em>Insert Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.InsertLineImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsertLine()
   * @generated
   */
  int INSERT_LINE = 22;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_LINE__VALUES = INSERT__VALUES;

  /**
   * The number of structural features of the '<em>Insert Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_LINE_FEATURE_COUNT = INSERT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.InsertFieldImpl <em>Insert Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.InsertFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsertField()
   * @generated
   */
  int INSERT_FIELD = 23;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_FIELD__VALUES = INSERT__VALUES;

  /**
   * The feature id for the '<em><b>Fieldname</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_FIELD__FIELDNAME = INSERT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Insert Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSERT_FIELD_FEATURE_COUNT = INSERT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ModifyImpl <em>Modify</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ModifyImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModify()
   * @generated
   */
  int MODIFY = 24;

  /**
   * The number of structural features of the '<em>Modify</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ModifyLineImpl <em>Modify Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ModifyLineImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyLine()
   * @generated
   */
  int MODIFY_LINE = 25;

  /**
   * The feature id for the '<em><b>Lines</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_LINE__LINES = MODIFY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_LINE__VALUES = MODIFY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Modify Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_LINE_FEATURE_COUNT = MODIFY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ModifyFieldImpl <em>Modify Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ModifyFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyField()
   * @generated
   */
  int MODIFY_FIELD = 26;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_FIELD__FIELDS = MODIFY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Values</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_FIELD__VALUES = MODIFY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Modify Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_FIELD_FEATURE_COUNT = MODIFY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ModifyCellImpl <em>Modify Cell</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ModifyCellImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyCell()
   * @generated
   */
  int MODIFY_CELL = 27;

  /**
   * The feature id for the '<em><b>Cell</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_CELL__CELL = MODIFY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_CELL__VALUE = MODIFY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Modify Cell</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODIFY_CELL_FEATURE_COUNT = MODIFY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintImpl <em>Print</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrint()
   * @generated
   */
  int PRINT = 28;

  /**
   * The number of structural features of the '<em>Print</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintLineImpl <em>Print Line</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintLineImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintLine()
   * @generated
   */
  int PRINT_LINE = 29;

  /**
   * The feature id for the '<em><b>Lines</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_LINE__LINES = PRINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Print Line</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_LINE_FEATURE_COUNT = PRINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintFieldImpl <em>Print Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintField()
   * @generated
   */
  int PRINT_FIELD = 30;

  /**
   * The feature id for the '<em><b>Fields</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_FIELD__FIELDS = PRINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Print Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_FIELD_FEATURE_COUNT = PRINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintCellImpl <em>Print Cell</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintCellImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintCell()
   * @generated
   */
  int PRINT_CELL = 31;

  /**
   * The feature id for the '<em><b>Cell</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_CELL__CELL = PRINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Print Cell</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_CELL_FEATURE_COUNT = PRINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintExprImpl <em>Print Expr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintExprImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintExpr()
   * @generated
   */
  int PRINT_EXPR = 32;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_EXPR__EXP = PRINT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Print Expr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_EXPR_FEATURE_COUNT = PRINT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.RenameFieldImpl <em>Rename Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.RenameFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getRenameField()
   * @generated
   */
  int RENAME_FIELD = 33;

  /**
   * The feature id for the '<em><b>Last field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RENAME_FIELD__LAST_FIELD = STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>New field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RENAME_FIELD__NEW_FIELD = STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Rename Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RENAME_FIELD_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExpressionLogImpl <em>Expression Log</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExpressionLogImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionLog()
   * @generated
   */
  int EXPRESSION_LOG = 34;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LOG__EXPR = 0;

  /**
   * The number of structural features of the '<em>Expression Log</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LOG_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.OrExpressionImpl <em>Or Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.OrExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getOrExpression()
   * @generated
   */
  int OR_EXPRESSION = 35;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__LHS = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION__RHS = 1;

  /**
   * The number of structural features of the '<em>Or Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.AndExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 36;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LHS = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RHS = 1;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.UnaryLogExpressionImpl <em>Unary Log Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.UnaryLogExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getUnaryLogExpression()
   * @generated
   */
  int UNARY_LOG_EXPRESSION = 37;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_LOG_EXPRESSION__NOT = 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_LOG_EXPRESSION__EXPR = 1;

  /**
   * The number of structural features of the '<em>Unary Log Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_LOG_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExpressionLogPrimaryImpl <em>Expression Log Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExpressionLogPrimaryImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionLogPrimary()
   * @generated
   */
  int EXPRESSION_LOG_PRIMARY = 38;

  /**
   * The number of structural features of the '<em>Expression Log Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LOG_PRIMARY_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.NestedLogExpressionImpl <em>Nested Log Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.NestedLogExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNestedLogExpression()
   * @generated
   */
  int NESTED_LOG_EXPRESSION = 39;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_LOG_EXPRESSION__EXPR = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Nested Log Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_LOG_EXPRESSION_FEATURE_COUNT = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExpressionRelImpl <em>Expression Rel</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExpressionRelImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionRel()
   * @generated
   */
  int EXPRESSION_REL = 40;

  /**
   * The feature id for the '<em><b>Field</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_REL__FIELD = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_REL__OP = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Val</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_REL__VAL = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Expression Rel</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_REL_FEATURE_COUNT = EXPRESSION_LOG_PRIMARY_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExpressionCalculImpl <em>Expression Calcul</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExpressionCalculImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionCalcul()
   * @generated
   */
  int EXPRESSION_CALCUL = 41;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CALCUL__EXPR = VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Calcul</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CALCUL_FEATURE_COUNT = VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.AdditiveExpressionImpl <em>Additive Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.AdditiveExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAdditiveExpression()
   * @generated
   */
  int ADDITIVE_EXPRESSION = 42;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION__LHS = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION__RHS = 1;

  /**
   * The number of structural features of the '<em>Additive Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.AdditiveExpressionRhsImpl <em>Additive Expression Rhs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.AdditiveExpressionRhsImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAdditiveExpressionRhs()
   * @generated
   */
  int ADDITIVE_EXPRESSION_RHS = 43;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION_RHS__OP = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION_RHS__RHS = 1;

  /**
   * The number of structural features of the '<em>Additive Expression Rhs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADDITIVE_EXPRESSION_RHS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.MultiplicativeExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getMultiplicativeExpression()
   * @generated
   */
  int MULTIPLICATIVE_EXPRESSION = 44;

  /**
   * The feature id for the '<em><b>Lhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION__LHS = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION__RHS = 1;

  /**
   * The number of structural features of the '<em>Multiplicative Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.MultiplicativeExpressionRhsImpl <em>Multiplicative Expression Rhs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.MultiplicativeExpressionRhsImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getMultiplicativeExpressionRhs()
   * @generated
   */
  int MULTIPLICATIVE_EXPRESSION_RHS = 45;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_RHS__OP = 0;

  /**
   * The feature id for the '<em><b>Rhs</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_RHS__RHS = 1;

  /**
   * The number of structural features of the '<em>Multiplicative Expression Rhs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLICATIVE_EXPRESSION_RHS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.UnaryExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 46;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OP = 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__EXPR = 1;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.ExpressionCalculPrimaryImpl <em>Expression Calcul Primary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.ExpressionCalculPrimaryImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionCalculPrimary()
   * @generated
   */
  int EXPRESSION_CALCUL_PRIMARY = 47;

  /**
   * The number of structural features of the '<em>Expression Calcul Primary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.AggregatExpressionImpl <em>Aggregat Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.AggregatExpressionImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAggregatExpression()
   * @generated
   */
  int AGGREGAT_EXPRESSION = 48;

  /**
   * The feature id for the '<em><b>Aggregat Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGAT_EXPRESSION__AGGREGAT_OP = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Arg</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGAT_EXPRESSION__ARG = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Aggregat Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AGGREGAT_EXPRESSION_FEATURE_COUNT = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LitteralIntImpl <em>Litteral Int</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LitteralIntImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralInt()
   * @generated
   */
  int LITTERAL_INT = 49;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_INT__VAL = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Litteral Int</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_INT_FEATURE_COUNT = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LitteralFloatImpl <em>Litteral Float</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LitteralFloatImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralFloat()
   * @generated
   */
  int LITTERAL_FLOAT = 50;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_FLOAT__VAL = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Litteral Float</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_FLOAT_FEATURE_COUNT = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.LitteralStringImpl <em>Litteral String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.LitteralStringImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralString()
   * @generated
   */
  int LITTERAL_STRING = 51;

  /**
   * The feature id for the '<em><b>Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_STRING__VAL = VALUE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Litteral String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LITTERAL_STRING_FEATURE_COUNT = VALUE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.NestedExpressionCalculImpl <em>Nested Expression Calcul</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.NestedExpressionCalculImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNestedExpressionCalcul()
   * @generated
   */
  int NESTED_EXPRESSION_CALCUL = 52;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXPRESSION_CALCUL__EXPR = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Nested Expression Calcul</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NESTED_EXPRESSION_CALCUL_FEATURE_COUNT = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.PrintTableImpl <em>Print Table</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.PrintTableImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintTable()
   * @generated
   */
  int PRINT_TABLE = 53;

  /**
   * The number of structural features of the '<em>Print Table</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRINT_TABLE_FEATURE_COUNT = PRINT_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.impl.NbFieldImpl <em>Nb Field</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.impl.NbFieldImpl
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNbField()
   * @generated
   */
  int NB_FIELD = 54;

  /**
   * The number of structural features of the '<em>Nb Field</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NB_FIELD_FEATURE_COUNT = EXPRESSION_CALCUL_PRIMARY_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.BinOpRel <em>Bin Op Rel</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.BinOpRel
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpRel()
   * @generated
   */
  int BIN_OP_REL = 55;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.Aggregat <em>Aggregat</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.Aggregat
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAggregat()
   * @generated
   */
  int AGGREGAT = 56;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.BinOpAdd <em>Bin Op Add</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.BinOpAdd
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpAdd()
   * @generated
   */
  int BIN_OP_ADD = 57;

  /**
   * The meta object id for the '{@link org.xtext.myCsv.BinOpMult <em>Bin Op Mult</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.myCsv.BinOpMult
   * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpMult()
   * @generated
   */
  int BIN_OP_MULT = 58;


  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Program <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.myCsv.Program
   * @generated
   */
  EClass getProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.Program#getStmts <em>Stmts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Stmts</em>'.
   * @see org.xtext.myCsv.Program#getStmts()
   * @see #getProgram()
   * @generated
   */
  EReference getProgram_Stmts();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LineIndex <em>Line Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Index</em>'.
   * @see org.xtext.myCsv.LineIndex
   * @generated
   */
  EClass getLineIndex();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LineIndexCond <em>Line Index Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Index Cond</em>'.
   * @see org.xtext.myCsv.LineIndexCond
   * @generated
   */
  EClass getLineIndexCond();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.LineIndexCond#getCond <em>Cond</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cond</em>'.
   * @see org.xtext.myCsv.LineIndexCond#getCond()
   * @see #getLineIndexCond()
   * @generated
   */
  EReference getLineIndexCond_Cond();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LineIndexNum <em>Line Index Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Line Index Num</em>'.
   * @see org.xtext.myCsv.LineIndexNum
   * @generated
   */
  EClass getLineIndexNum();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.myCsv.LineIndexNum#getLines <em>Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Lines</em>'.
   * @see org.xtext.myCsv.LineIndexNum#getLines()
   * @see #getLineIndexNum()
   * @generated
   */
  EAttribute getLineIndexNum_Lines();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.FieldIndex <em>Field Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field Index</em>'.
   * @see org.xtext.myCsv.FieldIndex
   * @generated
   */
  EClass getFieldIndex();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.FieldIndexName <em>Field Index Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field Index Name</em>'.
   * @see org.xtext.myCsv.FieldIndexName
   * @generated
   */
  EClass getFieldIndexName();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.FieldIndexName#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fields</em>'.
   * @see org.xtext.myCsv.FieldIndexName#getFields()
   * @see #getFieldIndexName()
   * @generated
   */
  EReference getFieldIndexName_Fields();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.FieldIndexNum <em>Field Index Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field Index Num</em>'.
   * @see org.xtext.myCsv.FieldIndexNum
   * @generated
   */
  EClass getFieldIndexNum();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.myCsv.FieldIndexNum#getColumns <em>Columns</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Columns</em>'.
   * @see org.xtext.myCsv.FieldIndexNum#getColumns()
   * @see #getFieldIndexNum()
   * @generated
   */
  EAttribute getFieldIndexNum_Columns();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.CellIndex <em>Cell Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cell Index</em>'.
   * @see org.xtext.myCsv.CellIndex
   * @generated
   */
  EClass getCellIndex();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.CellIndex#getLine <em>Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Line</em>'.
   * @see org.xtext.myCsv.CellIndex#getLine()
   * @see #getCellIndex()
   * @generated
   */
  EAttribute getCellIndex_Line();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.CellIndex#getColnum <em>Colnum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Colnum</em>'.
   * @see org.xtext.myCsv.CellIndex#getColnum()
   * @see #getCellIndex()
   * @generated
   */
  EAttribute getCellIndex_Colnum();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.CellIndex#getColname <em>Colname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Colname</em>'.
   * @see org.xtext.myCsv.CellIndex#getColname()
   * @see #getCellIndex()
   * @generated
   */
  EReference getCellIndex_Colname();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Value <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Value</em>'.
   * @see org.xtext.myCsv.Value
   * @generated
   */
  EClass getValue();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Values <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Values</em>'.
   * @see org.xtext.myCsv.Values
   * @generated
   */
  EClass getValues();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.Values#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Values</em>'.
   * @see org.xtext.myCsv.Values#getValues()
   * @see #getValues()
   * @generated
   */
  EReference getValues_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Path <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Path</em>'.
   * @see org.xtext.myCsv.Path
   * @generated
   */
  EClass getPath();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Path#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.myCsv.Path#getValue()
   * @see #getPath()
   * @generated
   */
  EAttribute getPath_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Field <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Field</em>'.
   * @see org.xtext.myCsv.Field
   * @generated
   */
  EClass getField();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Field#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.myCsv.Field#getValue()
   * @see #getField()
   * @generated
   */
  EAttribute getField_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Statement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Statement</em>'.
   * @see org.xtext.myCsv.Statement
   * @generated
   */
  EClass getStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Load <em>Load</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Load</em>'.
   * @see org.xtext.myCsv.Load
   * @generated
   */
  EClass getLoad();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.Load#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Path</em>'.
   * @see org.xtext.myCsv.Load#getPath()
   * @see #getLoad()
   * @generated
   */
  EReference getLoad_Path();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Load#isSepDefined <em>Sep Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sep Defined</em>'.
   * @see org.xtext.myCsv.Load#isSepDefined()
   * @see #getLoad()
   * @generated
   */
  EAttribute getLoad_SepDefined();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Load#getSep <em>Sep</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sep</em>'.
   * @see org.xtext.myCsv.Load#getSep()
   * @see #getLoad()
   * @generated
   */
  EAttribute getLoad_Sep();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Load#isNoHeader <em>No Header</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>No Header</em>'.
   * @see org.xtext.myCsv.Load#isNoHeader()
   * @see #getLoad()
   * @generated
   */
  EAttribute getLoad_NoHeader();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Store <em>Store</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Store</em>'.
   * @see org.xtext.myCsv.Store
   * @generated
   */
  EClass getStore();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.Store#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Path</em>'.
   * @see org.xtext.myCsv.Store#getPath()
   * @see #getStore()
   * @generated
   */
  EReference getStore_Path();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Store#isSepDefined <em>Sep Defined</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sep Defined</em>'.
   * @see org.xtext.myCsv.Store#isSepDefined()
   * @see #getStore()
   * @generated
   */
  EAttribute getStore_SepDefined();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Store#getSep <em>Sep</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sep</em>'.
   * @see org.xtext.myCsv.Store#getSep()
   * @see #getStore()
   * @generated
   */
  EAttribute getStore_Sep();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.Store#isNoHeader <em>No Header</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>No Header</em>'.
   * @see org.xtext.myCsv.Store#isNoHeader()
   * @see #getStore()
   * @generated
   */
  EAttribute getStore_NoHeader();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExportJson <em>Export Json</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Export Json</em>'.
   * @see org.xtext.myCsv.ExportJson
   * @generated
   */
  EClass getExportJson();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ExportJson#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Path</em>'.
   * @see org.xtext.myCsv.ExportJson#getPath()
   * @see #getExportJson()
   * @generated
   */
  EReference getExportJson_Path();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Projection <em>Projection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Projection</em>'.
   * @see org.xtext.myCsv.Projection
   * @generated
   */
  EClass getProjection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.Projection#getField <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field</em>'.
   * @see org.xtext.myCsv.Projection#getField()
   * @see #getProjection()
   * @generated
   */
  EReference getProjection_Field();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Select <em>Select</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Select</em>'.
   * @see org.xtext.myCsv.Select
   * @generated
   */
  EClass getSelect();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.Select#getLine <em>Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Line</em>'.
   * @see org.xtext.myCsv.Select#getLine()
   * @see #getSelect()
   * @generated
   */
  EReference getSelect_Line();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Delete <em>Delete</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete</em>'.
   * @see org.xtext.myCsv.Delete
   * @generated
   */
  EClass getDelete();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.DeleteLine <em>Delete Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete Line</em>'.
   * @see org.xtext.myCsv.DeleteLine
   * @generated
   */
  EClass getDeleteLine();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.DeleteLine#getLines <em>Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lines</em>'.
   * @see org.xtext.myCsv.DeleteLine#getLines()
   * @see #getDeleteLine()
   * @generated
   */
  EReference getDeleteLine_Lines();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.DeleteField <em>Delete Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Delete Field</em>'.
   * @see org.xtext.myCsv.DeleteField
   * @generated
   */
  EClass getDeleteField();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.DeleteField#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fields</em>'.
   * @see org.xtext.myCsv.DeleteField#getFields()
   * @see #getDeleteField()
   * @generated
   */
  EReference getDeleteField_Fields();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Insert <em>Insert</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Insert</em>'.
   * @see org.xtext.myCsv.Insert
   * @generated
   */
  EClass getInsert();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.Insert#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Values</em>'.
   * @see org.xtext.myCsv.Insert#getValues()
   * @see #getInsert()
   * @generated
   */
  EReference getInsert_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.InsertLine <em>Insert Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Insert Line</em>'.
   * @see org.xtext.myCsv.InsertLine
   * @generated
   */
  EClass getInsertLine();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.InsertField <em>Insert Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Insert Field</em>'.
   * @see org.xtext.myCsv.InsertField
   * @generated
   */
  EClass getInsertField();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.InsertField#getFieldname <em>Fieldname</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fieldname</em>'.
   * @see org.xtext.myCsv.InsertField#getFieldname()
   * @see #getInsertField()
   * @generated
   */
  EReference getInsertField_Fieldname();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Modify <em>Modify</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modify</em>'.
   * @see org.xtext.myCsv.Modify
   * @generated
   */
  EClass getModify();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ModifyLine <em>Modify Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modify Line</em>'.
   * @see org.xtext.myCsv.ModifyLine
   * @generated
   */
  EClass getModifyLine();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyLine#getLines <em>Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lines</em>'.
   * @see org.xtext.myCsv.ModifyLine#getLines()
   * @see #getModifyLine()
   * @generated
   */
  EReference getModifyLine_Lines();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyLine#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Values</em>'.
   * @see org.xtext.myCsv.ModifyLine#getValues()
   * @see #getModifyLine()
   * @generated
   */
  EReference getModifyLine_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ModifyField <em>Modify Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modify Field</em>'.
   * @see org.xtext.myCsv.ModifyField
   * @generated
   */
  EClass getModifyField();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyField#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fields</em>'.
   * @see org.xtext.myCsv.ModifyField#getFields()
   * @see #getModifyField()
   * @generated
   */
  EReference getModifyField_Fields();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyField#getValues <em>Values</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Values</em>'.
   * @see org.xtext.myCsv.ModifyField#getValues()
   * @see #getModifyField()
   * @generated
   */
  EReference getModifyField_Values();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ModifyCell <em>Modify Cell</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Modify Cell</em>'.
   * @see org.xtext.myCsv.ModifyCell
   * @generated
   */
  EClass getModifyCell();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyCell#getCell <em>Cell</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cell</em>'.
   * @see org.xtext.myCsv.ModifyCell#getCell()
   * @see #getModifyCell()
   * @generated
   */
  EReference getModifyCell_Cell();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ModifyCell#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.myCsv.ModifyCell#getValue()
   * @see #getModifyCell()
   * @generated
   */
  EReference getModifyCell_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.Print <em>Print</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print</em>'.
   * @see org.xtext.myCsv.Print
   * @generated
   */
  EClass getPrint();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.PrintLine <em>Print Line</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Line</em>'.
   * @see org.xtext.myCsv.PrintLine
   * @generated
   */
  EClass getPrintLine();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.PrintLine#getLines <em>Lines</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lines</em>'.
   * @see org.xtext.myCsv.PrintLine#getLines()
   * @see #getPrintLine()
   * @generated
   */
  EReference getPrintLine_Lines();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.PrintField <em>Print Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Field</em>'.
   * @see org.xtext.myCsv.PrintField
   * @generated
   */
  EClass getPrintField();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.PrintField#getFields <em>Fields</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fields</em>'.
   * @see org.xtext.myCsv.PrintField#getFields()
   * @see #getPrintField()
   * @generated
   */
  EReference getPrintField_Fields();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.PrintCell <em>Print Cell</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Cell</em>'.
   * @see org.xtext.myCsv.PrintCell
   * @generated
   */
  EClass getPrintCell();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.PrintCell#getCell <em>Cell</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Cell</em>'.
   * @see org.xtext.myCsv.PrintCell#getCell()
   * @see #getPrintCell()
   * @generated
   */
  EReference getPrintCell_Cell();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.PrintExpr <em>Print Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Expr</em>'.
   * @see org.xtext.myCsv.PrintExpr
   * @generated
   */
  EClass getPrintExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.PrintExpr#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see org.xtext.myCsv.PrintExpr#getExp()
   * @see #getPrintExpr()
   * @generated
   */
  EReference getPrintExpr_Exp();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.RenameField <em>Rename Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Rename Field</em>'.
   * @see org.xtext.myCsv.RenameField
   * @generated
   */
  EClass getRenameField();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.RenameField#getLast_field <em>Last field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Last field</em>'.
   * @see org.xtext.myCsv.RenameField#getLast_field()
   * @see #getRenameField()
   * @generated
   */
  EReference getRenameField_Last_field();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.RenameField#getNew_field <em>New field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>New field</em>'.
   * @see org.xtext.myCsv.RenameField#getNew_field()
   * @see #getRenameField()
   * @generated
   */
  EReference getRenameField_New_field();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExpressionLog <em>Expression Log</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Log</em>'.
   * @see org.xtext.myCsv.ExpressionLog
   * @generated
   */
  EClass getExpressionLog();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ExpressionLog#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.ExpressionLog#getExpr()
   * @see #getExpressionLog()
   * @generated
   */
  EReference getExpressionLog_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.OrExpression <em>Or Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or Expression</em>'.
   * @see org.xtext.myCsv.OrExpression
   * @generated
   */
  EClass getOrExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.OrExpression#getLhs <em>Lhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lhs</em>'.
   * @see org.xtext.myCsv.OrExpression#getLhs()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Lhs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.OrExpression#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rhs</em>'.
   * @see org.xtext.myCsv.OrExpression#getRhs()
   * @see #getOrExpression()
   * @generated
   */
  EReference getOrExpression_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see org.xtext.myCsv.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.AndExpression#getLhs <em>Lhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lhs</em>'.
   * @see org.xtext.myCsv.AndExpression#getLhs()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Lhs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.AndExpression#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rhs</em>'.
   * @see org.xtext.myCsv.AndExpression#getRhs()
   * @see #getAndExpression()
   * @generated
   */
  EReference getAndExpression_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.UnaryLogExpression <em>Unary Log Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Log Expression</em>'.
   * @see org.xtext.myCsv.UnaryLogExpression
   * @generated
   */
  EClass getUnaryLogExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.UnaryLogExpression#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see org.xtext.myCsv.UnaryLogExpression#isNot()
   * @see #getUnaryLogExpression()
   * @generated
   */
  EAttribute getUnaryLogExpression_Not();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.UnaryLogExpression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.UnaryLogExpression#getExpr()
   * @see #getUnaryLogExpression()
   * @generated
   */
  EReference getUnaryLogExpression_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExpressionLogPrimary <em>Expression Log Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Log Primary</em>'.
   * @see org.xtext.myCsv.ExpressionLogPrimary
   * @generated
   */
  EClass getExpressionLogPrimary();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.NestedLogExpression <em>Nested Log Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nested Log Expression</em>'.
   * @see org.xtext.myCsv.NestedLogExpression
   * @generated
   */
  EClass getNestedLogExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.NestedLogExpression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.NestedLogExpression#getExpr()
   * @see #getNestedLogExpression()
   * @generated
   */
  EReference getNestedLogExpression_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExpressionRel <em>Expression Rel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Rel</em>'.
   * @see org.xtext.myCsv.ExpressionRel
   * @generated
   */
  EClass getExpressionRel();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ExpressionRel#getField <em>Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field</em>'.
   * @see org.xtext.myCsv.ExpressionRel#getField()
   * @see #getExpressionRel()
   * @generated
   */
  EReference getExpressionRel_Field();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.ExpressionRel#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.myCsv.ExpressionRel#getOp()
   * @see #getExpressionRel()
   * @generated
   */
  EAttribute getExpressionRel_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ExpressionRel#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Val</em>'.
   * @see org.xtext.myCsv.ExpressionRel#getVal()
   * @see #getExpressionRel()
   * @generated
   */
  EReference getExpressionRel_Val();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExpressionCalcul <em>Expression Calcul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Calcul</em>'.
   * @see org.xtext.myCsv.ExpressionCalcul
   * @generated
   */
  EClass getExpressionCalcul();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.ExpressionCalcul#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.ExpressionCalcul#getExpr()
   * @see #getExpressionCalcul()
   * @generated
   */
  EReference getExpressionCalcul_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.AdditiveExpression <em>Additive Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Additive Expression</em>'.
   * @see org.xtext.myCsv.AdditiveExpression
   * @generated
   */
  EClass getAdditiveExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.AdditiveExpression#getLhs <em>Lhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lhs</em>'.
   * @see org.xtext.myCsv.AdditiveExpression#getLhs()
   * @see #getAdditiveExpression()
   * @generated
   */
  EReference getAdditiveExpression_Lhs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.AdditiveExpression#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rhs</em>'.
   * @see org.xtext.myCsv.AdditiveExpression#getRhs()
   * @see #getAdditiveExpression()
   * @generated
   */
  EReference getAdditiveExpression_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.AdditiveExpressionRhs <em>Additive Expression Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Additive Expression Rhs</em>'.
   * @see org.xtext.myCsv.AdditiveExpressionRhs
   * @generated
   */
  EClass getAdditiveExpressionRhs();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.AdditiveExpressionRhs#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.myCsv.AdditiveExpressionRhs#getOp()
   * @see #getAdditiveExpressionRhs()
   * @generated
   */
  EAttribute getAdditiveExpressionRhs_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.AdditiveExpressionRhs#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rhs</em>'.
   * @see org.xtext.myCsv.AdditiveExpressionRhs#getRhs()
   * @see #getAdditiveExpressionRhs()
   * @generated
   */
  EReference getAdditiveExpressionRhs_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.MultiplicativeExpression <em>Multiplicative Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicative Expression</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpression
   * @generated
   */
  EClass getMultiplicativeExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.MultiplicativeExpression#getLhs <em>Lhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Lhs</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpression#getLhs()
   * @see #getMultiplicativeExpression()
   * @generated
   */
  EReference getMultiplicativeExpression_Lhs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.myCsv.MultiplicativeExpression#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Rhs</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpression#getRhs()
   * @see #getMultiplicativeExpression()
   * @generated
   */
  EReference getMultiplicativeExpression_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.MultiplicativeExpressionRhs <em>Multiplicative Expression Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiplicative Expression Rhs</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpressionRhs
   * @generated
   */
  EClass getMultiplicativeExpressionRhs();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.MultiplicativeExpressionRhs#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpressionRhs#getOp()
   * @see #getMultiplicativeExpressionRhs()
   * @generated
   */
  EAttribute getMultiplicativeExpressionRhs_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.MultiplicativeExpressionRhs#getRhs <em>Rhs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rhs</em>'.
   * @see org.xtext.myCsv.MultiplicativeExpressionRhs#getRhs()
   * @see #getMultiplicativeExpressionRhs()
   * @generated
   */
  EReference getMultiplicativeExpressionRhs_Rhs();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see org.xtext.myCsv.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.UnaryExpression#isOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.myCsv.UnaryExpression#isOp()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.UnaryExpression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.UnaryExpression#getExpr()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.ExpressionCalculPrimary <em>Expression Calcul Primary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Calcul Primary</em>'.
   * @see org.xtext.myCsv.ExpressionCalculPrimary
   * @generated
   */
  EClass getExpressionCalculPrimary();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.AggregatExpression <em>Aggregat Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Aggregat Expression</em>'.
   * @see org.xtext.myCsv.AggregatExpression
   * @generated
   */
  EClass getAggregatExpression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.AggregatExpression#getAggregatOp <em>Aggregat Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Aggregat Op</em>'.
   * @see org.xtext.myCsv.AggregatExpression#getAggregatOp()
   * @see #getAggregatExpression()
   * @generated
   */
  EAttribute getAggregatExpression_AggregatOp();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.AggregatExpression#getArg <em>Arg</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Arg</em>'.
   * @see org.xtext.myCsv.AggregatExpression#getArg()
   * @see #getAggregatExpression()
   * @generated
   */
  EReference getAggregatExpression_Arg();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LitteralInt <em>Litteral Int</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Litteral Int</em>'.
   * @see org.xtext.myCsv.LitteralInt
   * @generated
   */
  EClass getLitteralInt();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.LitteralInt#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see org.xtext.myCsv.LitteralInt#getVal()
   * @see #getLitteralInt()
   * @generated
   */
  EAttribute getLitteralInt_Val();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LitteralFloat <em>Litteral Float</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Litteral Float</em>'.
   * @see org.xtext.myCsv.LitteralFloat
   * @generated
   */
  EClass getLitteralFloat();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.LitteralFloat#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see org.xtext.myCsv.LitteralFloat#getVal()
   * @see #getLitteralFloat()
   * @generated
   */
  EAttribute getLitteralFloat_Val();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.LitteralString <em>Litteral String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Litteral String</em>'.
   * @see org.xtext.myCsv.LitteralString
   * @generated
   */
  EClass getLitteralString();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.myCsv.LitteralString#getVal <em>Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Val</em>'.
   * @see org.xtext.myCsv.LitteralString#getVal()
   * @see #getLitteralString()
   * @generated
   */
  EAttribute getLitteralString_Val();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.NestedExpressionCalcul <em>Nested Expression Calcul</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nested Expression Calcul</em>'.
   * @see org.xtext.myCsv.NestedExpressionCalcul
   * @generated
   */
  EClass getNestedExpressionCalcul();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.myCsv.NestedExpressionCalcul#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.myCsv.NestedExpressionCalcul#getExpr()
   * @see #getNestedExpressionCalcul()
   * @generated
   */
  EReference getNestedExpressionCalcul_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.PrintTable <em>Print Table</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Print Table</em>'.
   * @see org.xtext.myCsv.PrintTable
   * @generated
   */
  EClass getPrintTable();

  /**
   * Returns the meta object for class '{@link org.xtext.myCsv.NbField <em>Nb Field</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Nb Field</em>'.
   * @see org.xtext.myCsv.NbField
   * @generated
   */
  EClass getNbField();

  /**
   * Returns the meta object for enum '{@link org.xtext.myCsv.BinOpRel <em>Bin Op Rel</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Bin Op Rel</em>'.
   * @see org.xtext.myCsv.BinOpRel
   * @generated
   */
  EEnum getBinOpRel();

  /**
   * Returns the meta object for enum '{@link org.xtext.myCsv.Aggregat <em>Aggregat</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Aggregat</em>'.
   * @see org.xtext.myCsv.Aggregat
   * @generated
   */
  EEnum getAggregat();

  /**
   * Returns the meta object for enum '{@link org.xtext.myCsv.BinOpAdd <em>Bin Op Add</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Bin Op Add</em>'.
   * @see org.xtext.myCsv.BinOpAdd
   * @generated
   */
  EEnum getBinOpAdd();

  /**
   * Returns the meta object for enum '{@link org.xtext.myCsv.BinOpMult <em>Bin Op Mult</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Bin Op Mult</em>'.
   * @see org.xtext.myCsv.BinOpMult
   * @generated
   */
  EEnum getBinOpMult();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  MyCsvFactory getMyCsvFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ProgramImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getProgram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getProgram();

    /**
     * The meta object literal for the '<em><b>Stmts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__STMTS = eINSTANCE.getProgram_Stmts();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LineIndexImpl <em>Line Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LineIndexImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndex()
     * @generated
     */
    EClass LINE_INDEX = eINSTANCE.getLineIndex();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LineIndexCondImpl <em>Line Index Cond</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LineIndexCondImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndexCond()
     * @generated
     */
    EClass LINE_INDEX_COND = eINSTANCE.getLineIndexCond();

    /**
     * The meta object literal for the '<em><b>Cond</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LINE_INDEX_COND__COND = eINSTANCE.getLineIndexCond_Cond();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LineIndexNumImpl <em>Line Index Num</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LineIndexNumImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLineIndexNum()
     * @generated
     */
    EClass LINE_INDEX_NUM = eINSTANCE.getLineIndexNum();

    /**
     * The meta object literal for the '<em><b>Lines</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LINE_INDEX_NUM__LINES = eINSTANCE.getLineIndexNum_Lines();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.FieldIndexImpl <em>Field Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.FieldIndexImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndex()
     * @generated
     */
    EClass FIELD_INDEX = eINSTANCE.getFieldIndex();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.FieldIndexNameImpl <em>Field Index Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.FieldIndexNameImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndexName()
     * @generated
     */
    EClass FIELD_INDEX_NAME = eINSTANCE.getFieldIndexName();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_INDEX_NAME__FIELDS = eINSTANCE.getFieldIndexName_Fields();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.FieldIndexNumImpl <em>Field Index Num</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.FieldIndexNumImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getFieldIndexNum()
     * @generated
     */
    EClass FIELD_INDEX_NUM = eINSTANCE.getFieldIndexNum();

    /**
     * The meta object literal for the '<em><b>Columns</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD_INDEX_NUM__COLUMNS = eINSTANCE.getFieldIndexNum_Columns();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.CellIndexImpl <em>Cell Index</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.CellIndexImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getCellIndex()
     * @generated
     */
    EClass CELL_INDEX = eINSTANCE.getCellIndex();

    /**
     * The meta object literal for the '<em><b>Line</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CELL_INDEX__LINE = eINSTANCE.getCellIndex_Line();

    /**
     * The meta object literal for the '<em><b>Colnum</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CELL_INDEX__COLNUM = eINSTANCE.getCellIndex_Colnum();

    /**
     * The meta object literal for the '<em><b>Colname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CELL_INDEX__COLNAME = eINSTANCE.getCellIndex_Colname();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ValueImpl <em>Value</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ValueImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getValue()
     * @generated
     */
    EClass VALUE = eINSTANCE.getValue();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ValuesImpl <em>Values</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ValuesImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getValues()
     * @generated
     */
    EClass VALUES = eINSTANCE.getValues();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUES__VALUES = eINSTANCE.getValues_Values();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PathImpl <em>Path</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PathImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPath()
     * @generated
     */
    EClass PATH = eINSTANCE.getPath();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PATH__VALUE = eINSTANCE.getPath_Value();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.FieldImpl <em>Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.FieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getField()
     * @generated
     */
    EClass FIELD = eINSTANCE.getField();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD__VALUE = eINSTANCE.getField_Value();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.StatementImpl <em>Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.StatementImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getStatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getStatement();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LoadImpl <em>Load</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LoadImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLoad()
     * @generated
     */
    EClass LOAD = eINSTANCE.getLoad();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LOAD__PATH = eINSTANCE.getLoad_Path();

    /**
     * The meta object literal for the '<em><b>Sep Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOAD__SEP_DEFINED = eINSTANCE.getLoad_SepDefined();

    /**
     * The meta object literal for the '<em><b>Sep</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOAD__SEP = eINSTANCE.getLoad_Sep();

    /**
     * The meta object literal for the '<em><b>No Header</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LOAD__NO_HEADER = eINSTANCE.getLoad_NoHeader();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.StoreImpl <em>Store</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.StoreImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getStore()
     * @generated
     */
    EClass STORE = eINSTANCE.getStore();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STORE__PATH = eINSTANCE.getStore_Path();

    /**
     * The meta object literal for the '<em><b>Sep Defined</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STORE__SEP_DEFINED = eINSTANCE.getStore_SepDefined();

    /**
     * The meta object literal for the '<em><b>Sep</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STORE__SEP = eINSTANCE.getStore_Sep();

    /**
     * The meta object literal for the '<em><b>No Header</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STORE__NO_HEADER = eINSTANCE.getStore_NoHeader();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExportJsonImpl <em>Export Json</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExportJsonImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExportJson()
     * @generated
     */
    EClass EXPORT_JSON = eINSTANCE.getExportJson();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPORT_JSON__PATH = eINSTANCE.getExportJson_Path();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ProjectionImpl <em>Projection</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ProjectionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getProjection()
     * @generated
     */
    EClass PROJECTION = eINSTANCE.getProjection();

    /**
     * The meta object literal for the '<em><b>Field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROJECTION__FIELD = eINSTANCE.getProjection_Field();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.SelectImpl <em>Select</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.SelectImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getSelect()
     * @generated
     */
    EClass SELECT = eINSTANCE.getSelect();

    /**
     * The meta object literal for the '<em><b>Line</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SELECT__LINE = eINSTANCE.getSelect_Line();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.DeleteImpl <em>Delete</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.DeleteImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDelete()
     * @generated
     */
    EClass DELETE = eINSTANCE.getDelete();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.DeleteLineImpl <em>Delete Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.DeleteLineImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDeleteLine()
     * @generated
     */
    EClass DELETE_LINE = eINSTANCE.getDeleteLine();

    /**
     * The meta object literal for the '<em><b>Lines</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE_LINE__LINES = eINSTANCE.getDeleteLine_Lines();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.DeleteFieldImpl <em>Delete Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.DeleteFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getDeleteField()
     * @generated
     */
    EClass DELETE_FIELD = eINSTANCE.getDeleteField();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DELETE_FIELD__FIELDS = eINSTANCE.getDeleteField_Fields();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.InsertImpl <em>Insert</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.InsertImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsert()
     * @generated
     */
    EClass INSERT = eINSTANCE.getInsert();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSERT__VALUES = eINSTANCE.getInsert_Values();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.InsertLineImpl <em>Insert Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.InsertLineImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsertLine()
     * @generated
     */
    EClass INSERT_LINE = eINSTANCE.getInsertLine();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.InsertFieldImpl <em>Insert Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.InsertFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getInsertField()
     * @generated
     */
    EClass INSERT_FIELD = eINSTANCE.getInsertField();

    /**
     * The meta object literal for the '<em><b>Fieldname</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSERT_FIELD__FIELDNAME = eINSTANCE.getInsertField_Fieldname();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ModifyImpl <em>Modify</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ModifyImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModify()
     * @generated
     */
    EClass MODIFY = eINSTANCE.getModify();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ModifyLineImpl <em>Modify Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ModifyLineImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyLine()
     * @generated
     */
    EClass MODIFY_LINE = eINSTANCE.getModifyLine();

    /**
     * The meta object literal for the '<em><b>Lines</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_LINE__LINES = eINSTANCE.getModifyLine_Lines();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_LINE__VALUES = eINSTANCE.getModifyLine_Values();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ModifyFieldImpl <em>Modify Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ModifyFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyField()
     * @generated
     */
    EClass MODIFY_FIELD = eINSTANCE.getModifyField();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_FIELD__FIELDS = eINSTANCE.getModifyField_Fields();

    /**
     * The meta object literal for the '<em><b>Values</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_FIELD__VALUES = eINSTANCE.getModifyField_Values();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ModifyCellImpl <em>Modify Cell</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ModifyCellImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getModifyCell()
     * @generated
     */
    EClass MODIFY_CELL = eINSTANCE.getModifyCell();

    /**
     * The meta object literal for the '<em><b>Cell</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_CELL__CELL = eINSTANCE.getModifyCell_Cell();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODIFY_CELL__VALUE = eINSTANCE.getModifyCell_Value();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintImpl <em>Print</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrint()
     * @generated
     */
    EClass PRINT = eINSTANCE.getPrint();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintLineImpl <em>Print Line</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintLineImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintLine()
     * @generated
     */
    EClass PRINT_LINE = eINSTANCE.getPrintLine();

    /**
     * The meta object literal for the '<em><b>Lines</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT_LINE__LINES = eINSTANCE.getPrintLine_Lines();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintFieldImpl <em>Print Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintField()
     * @generated
     */
    EClass PRINT_FIELD = eINSTANCE.getPrintField();

    /**
     * The meta object literal for the '<em><b>Fields</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT_FIELD__FIELDS = eINSTANCE.getPrintField_Fields();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintCellImpl <em>Print Cell</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintCellImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintCell()
     * @generated
     */
    EClass PRINT_CELL = eINSTANCE.getPrintCell();

    /**
     * The meta object literal for the '<em><b>Cell</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT_CELL__CELL = eINSTANCE.getPrintCell_Cell();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintExprImpl <em>Print Expr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintExprImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintExpr()
     * @generated
     */
    EClass PRINT_EXPR = eINSTANCE.getPrintExpr();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRINT_EXPR__EXP = eINSTANCE.getPrintExpr_Exp();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.RenameFieldImpl <em>Rename Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.RenameFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getRenameField()
     * @generated
     */
    EClass RENAME_FIELD = eINSTANCE.getRenameField();

    /**
     * The meta object literal for the '<em><b>Last field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RENAME_FIELD__LAST_FIELD = eINSTANCE.getRenameField_Last_field();

    /**
     * The meta object literal for the '<em><b>New field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RENAME_FIELD__NEW_FIELD = eINSTANCE.getRenameField_New_field();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExpressionLogImpl <em>Expression Log</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExpressionLogImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionLog()
     * @generated
     */
    EClass EXPRESSION_LOG = eINSTANCE.getExpressionLog();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LOG__EXPR = eINSTANCE.getExpressionLog_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.OrExpressionImpl <em>Or Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.OrExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getOrExpression()
     * @generated
     */
    EClass OR_EXPRESSION = eINSTANCE.getOrExpression();

    /**
     * The meta object literal for the '<em><b>Lhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__LHS = eINSTANCE.getOrExpression_Lhs();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR_EXPRESSION__RHS = eINSTANCE.getOrExpression_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.AndExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '<em><b>Lhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__LHS = eINSTANCE.getAndExpression_Lhs();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND_EXPRESSION__RHS = eINSTANCE.getAndExpression_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.UnaryLogExpressionImpl <em>Unary Log Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.UnaryLogExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getUnaryLogExpression()
     * @generated
     */
    EClass UNARY_LOG_EXPRESSION = eINSTANCE.getUnaryLogExpression();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_LOG_EXPRESSION__NOT = eINSTANCE.getUnaryLogExpression_Not();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_LOG_EXPRESSION__EXPR = eINSTANCE.getUnaryLogExpression_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExpressionLogPrimaryImpl <em>Expression Log Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExpressionLogPrimaryImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionLogPrimary()
     * @generated
     */
    EClass EXPRESSION_LOG_PRIMARY = eINSTANCE.getExpressionLogPrimary();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.NestedLogExpressionImpl <em>Nested Log Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.NestedLogExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNestedLogExpression()
     * @generated
     */
    EClass NESTED_LOG_EXPRESSION = eINSTANCE.getNestedLogExpression();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_LOG_EXPRESSION__EXPR = eINSTANCE.getNestedLogExpression_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExpressionRelImpl <em>Expression Rel</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExpressionRelImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionRel()
     * @generated
     */
    EClass EXPRESSION_REL = eINSTANCE.getExpressionRel();

    /**
     * The meta object literal for the '<em><b>Field</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_REL__FIELD = eINSTANCE.getExpressionRel_Field();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_REL__OP = eINSTANCE.getExpressionRel_Op();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_REL__VAL = eINSTANCE.getExpressionRel_Val();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExpressionCalculImpl <em>Expression Calcul</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExpressionCalculImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionCalcul()
     * @generated
     */
    EClass EXPRESSION_CALCUL = eINSTANCE.getExpressionCalcul();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_CALCUL__EXPR = eINSTANCE.getExpressionCalcul_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.AdditiveExpressionImpl <em>Additive Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.AdditiveExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAdditiveExpression()
     * @generated
     */
    EClass ADDITIVE_EXPRESSION = eINSTANCE.getAdditiveExpression();

    /**
     * The meta object literal for the '<em><b>Lhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADDITIVE_EXPRESSION__LHS = eINSTANCE.getAdditiveExpression_Lhs();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADDITIVE_EXPRESSION__RHS = eINSTANCE.getAdditiveExpression_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.AdditiveExpressionRhsImpl <em>Additive Expression Rhs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.AdditiveExpressionRhsImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAdditiveExpressionRhs()
     * @generated
     */
    EClass ADDITIVE_EXPRESSION_RHS = eINSTANCE.getAdditiveExpressionRhs();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ADDITIVE_EXPRESSION_RHS__OP = eINSTANCE.getAdditiveExpressionRhs_Op();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ADDITIVE_EXPRESSION_RHS__RHS = eINSTANCE.getAdditiveExpressionRhs_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.MultiplicativeExpressionImpl <em>Multiplicative Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.MultiplicativeExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getMultiplicativeExpression()
     * @generated
     */
    EClass MULTIPLICATIVE_EXPRESSION = eINSTANCE.getMultiplicativeExpression();

    /**
     * The meta object literal for the '<em><b>Lhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION__LHS = eINSTANCE.getMultiplicativeExpression_Lhs();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION__RHS = eINSTANCE.getMultiplicativeExpression_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.MultiplicativeExpressionRhsImpl <em>Multiplicative Expression Rhs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.MultiplicativeExpressionRhsImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getMultiplicativeExpressionRhs()
     * @generated
     */
    EClass MULTIPLICATIVE_EXPRESSION_RHS = eINSTANCE.getMultiplicativeExpressionRhs();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MULTIPLICATIVE_EXPRESSION_RHS__OP = eINSTANCE.getMultiplicativeExpressionRhs_Op();

    /**
     * The meta object literal for the '<em><b>Rhs</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MULTIPLICATIVE_EXPRESSION_RHS__RHS = eINSTANCE.getMultiplicativeExpressionRhs_Rhs();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.UnaryExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__OP = eINSTANCE.getUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__EXPR = eINSTANCE.getUnaryExpression_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.ExpressionCalculPrimaryImpl <em>Expression Calcul Primary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.ExpressionCalculPrimaryImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getExpressionCalculPrimary()
     * @generated
     */
    EClass EXPRESSION_CALCUL_PRIMARY = eINSTANCE.getExpressionCalculPrimary();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.AggregatExpressionImpl <em>Aggregat Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.AggregatExpressionImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAggregatExpression()
     * @generated
     */
    EClass AGGREGAT_EXPRESSION = eINSTANCE.getAggregatExpression();

    /**
     * The meta object literal for the '<em><b>Aggregat Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AGGREGAT_EXPRESSION__AGGREGAT_OP = eINSTANCE.getAggregatExpression_AggregatOp();

    /**
     * The meta object literal for the '<em><b>Arg</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AGGREGAT_EXPRESSION__ARG = eINSTANCE.getAggregatExpression_Arg();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LitteralIntImpl <em>Litteral Int</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LitteralIntImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralInt()
     * @generated
     */
    EClass LITTERAL_INT = eINSTANCE.getLitteralInt();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITTERAL_INT__VAL = eINSTANCE.getLitteralInt_Val();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LitteralFloatImpl <em>Litteral Float</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LitteralFloatImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralFloat()
     * @generated
     */
    EClass LITTERAL_FLOAT = eINSTANCE.getLitteralFloat();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITTERAL_FLOAT__VAL = eINSTANCE.getLitteralFloat_Val();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.LitteralStringImpl <em>Litteral String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.LitteralStringImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getLitteralString()
     * @generated
     */
    EClass LITTERAL_STRING = eINSTANCE.getLitteralString();

    /**
     * The meta object literal for the '<em><b>Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LITTERAL_STRING__VAL = eINSTANCE.getLitteralString_Val();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.NestedExpressionCalculImpl <em>Nested Expression Calcul</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.NestedExpressionCalculImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNestedExpressionCalcul()
     * @generated
     */
    EClass NESTED_EXPRESSION_CALCUL = eINSTANCE.getNestedExpressionCalcul();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NESTED_EXPRESSION_CALCUL__EXPR = eINSTANCE.getNestedExpressionCalcul_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.PrintTableImpl <em>Print Table</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.PrintTableImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getPrintTable()
     * @generated
     */
    EClass PRINT_TABLE = eINSTANCE.getPrintTable();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.impl.NbFieldImpl <em>Nb Field</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.impl.NbFieldImpl
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getNbField()
     * @generated
     */
    EClass NB_FIELD = eINSTANCE.getNbField();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.BinOpRel <em>Bin Op Rel</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.BinOpRel
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpRel()
     * @generated
     */
    EEnum BIN_OP_REL = eINSTANCE.getBinOpRel();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.Aggregat <em>Aggregat</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.Aggregat
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getAggregat()
     * @generated
     */
    EEnum AGGREGAT = eINSTANCE.getAggregat();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.BinOpAdd <em>Bin Op Add</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.BinOpAdd
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpAdd()
     * @generated
     */
    EEnum BIN_OP_ADD = eINSTANCE.getBinOpAdd();

    /**
     * The meta object literal for the '{@link org.xtext.myCsv.BinOpMult <em>Bin Op Mult</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.myCsv.BinOpMult
     * @see org.xtext.myCsv.impl.MyCsvPackageImpl#getBinOpMult()
     * @generated
     */
    EEnum BIN_OP_MULT = eINSTANCE.getBinOpMult();

  }

} //MyCsvPackage
